# ----
# This file is generated by mini_lambda_methods_generation.py - do not modify it !
# ----
from mini_lambda.main import C, make_lambda_friendly_class, make_lambda_friendly_method

from math import acos, acosh, asin, asinh, atan, atan2, atanh, ceil, copysign, cos, cosh, degrees, e, erf, erfc, exp, expm1, fabs, factorial, floor, fmod, frexp, fsum, gamma, gcd, hypot, inf, isclose, isfinite, isinf, isnan, ldexp, lgamma, log, log10, log1p, log2, modf, nan, pi, pow, radians, sin, sinh, sqrt, tan, tanh, tau, trunc
from decimal import BasicContext, Clamped, Context, ConversionSyntax, Decimal, DecimalException, DecimalTuple, DefaultContext, DivisionByZero, DivisionImpossible, DivisionUndefined, ExtendedContext, FloatOperation, HAVE_THREADS, Inexact, InvalidContext, InvalidOperation, MAX_EMAX, MAX_PREC, MIN_EMIN, MIN_ETINY, Overflow, ROUND_05UP, ROUND_CEILING, ROUND_DOWN, ROUND_FLOOR, ROUND_HALF_DOWN, ROUND_HALF_EVEN, ROUND_HALF_UP, ROUND_UP, Rounded, Subnormal, Underflow, getcontext, localcontext, setcontext

Acos = make_lambda_friendly_method(acos, 'acos')


Acosh = make_lambda_friendly_method(acosh, 'acosh')


Asin = make_lambda_friendly_method(asin, 'asin')


Asinh = make_lambda_friendly_method(asinh, 'asinh')


Atan = make_lambda_friendly_method(atan, 'atan')


Atan2 = make_lambda_friendly_method(atan2, 'atan2')


Atanh = make_lambda_friendly_method(atanh, 'atanh')


Ceil = make_lambda_friendly_method(ceil, 'ceil')


Copysign = make_lambda_friendly_method(copysign, 'copysign')


Cos = make_lambda_friendly_method(cos, 'cos')


Cosh = make_lambda_friendly_method(cosh, 'cosh')


Degrees = make_lambda_friendly_method(degrees, 'degrees')


E = C(e, 'e')


Erf = make_lambda_friendly_method(erf, 'erf')


Erfc = make_lambda_friendly_method(erfc, 'erfc')


Exp = make_lambda_friendly_method(exp, 'exp')


Expm1 = make_lambda_friendly_method(expm1, 'expm1')


Fabs = make_lambda_friendly_method(fabs, 'fabs')


Factorial = make_lambda_friendly_method(factorial, 'factorial')


Floor = make_lambda_friendly_method(floor, 'floor')


Fmod = make_lambda_friendly_method(fmod, 'fmod')


Frexp = make_lambda_friendly_method(frexp, 'frexp')


Fsum = make_lambda_friendly_method(fsum, 'fsum')


Gamma = make_lambda_friendly_method(gamma, 'gamma')


Gcd = make_lambda_friendly_method(gcd, 'gcd')


Hypot = make_lambda_friendly_method(hypot, 'hypot')


Inf = C(inf, 'inf')


Isclose = make_lambda_friendly_method(isclose, 'isclose')


Isfinite = make_lambda_friendly_method(isfinite, 'isfinite')


Isinf = make_lambda_friendly_method(isinf, 'isinf')


Isnan = make_lambda_friendly_method(isnan, 'isnan')


Ldexp = make_lambda_friendly_method(ldexp, 'ldexp')


Lgamma = make_lambda_friendly_method(lgamma, 'lgamma')


Log = make_lambda_friendly_method(log, 'log')


Log10 = make_lambda_friendly_method(log10, 'log10')


Log1p = make_lambda_friendly_method(log1p, 'log1p')


Log2 = make_lambda_friendly_method(log2, 'log2')


Modf = make_lambda_friendly_method(modf, 'modf')


Nan = C(nan, 'nan')


Pi = C(pi, 'pi')


Pow = make_lambda_friendly_method(pow, 'pow')


Radians = make_lambda_friendly_method(radians, 'radians')


Sin = make_lambda_friendly_method(sin, 'sin')


Sinh = make_lambda_friendly_method(sinh, 'sinh')


Sqrt = make_lambda_friendly_method(sqrt, 'sqrt')


Tan = make_lambda_friendly_method(tan, 'tan')


Tanh = make_lambda_friendly_method(tanh, 'tanh')


Tau = C(tau, 'tau')


Trunc = make_lambda_friendly_method(trunc, 'trunc')


Basiccontext = C(BasicContext, 'BasicContext')


CClamped = make_lambda_friendly_class(Clamped)


CContext = make_lambda_friendly_class(Context)


CConversionSyntax = make_lambda_friendly_class(ConversionSyntax)


DDecimal = make_lambda_friendly_class(Decimal)


DDecimalException = make_lambda_friendly_class(DecimalException)


DDecimalTuple = make_lambda_friendly_class(DecimalTuple)


Defaultcontext = C(DefaultContext, 'DefaultContext')


DDivisionByZero = make_lambda_friendly_class(DivisionByZero)


DDivisionImpossible = make_lambda_friendly_class(DivisionImpossible)


DDivisionUndefined = make_lambda_friendly_class(DivisionUndefined)


Extendedcontext = C(ExtendedContext, 'ExtendedContext')


FFloatOperation = make_lambda_friendly_class(FloatOperation)


Have_threads = C(HAVE_THREADS, 'HAVE_THREADS')


IInexact = make_lambda_friendly_class(Inexact)


IInvalidContext = make_lambda_friendly_class(InvalidContext)


IInvalidOperation = make_lambda_friendly_class(InvalidOperation)


Max_emax = C(MAX_EMAX, 'MAX_EMAX')


Max_prec = C(MAX_PREC, 'MAX_PREC')


Min_emin = C(MIN_EMIN, 'MIN_EMIN')


Min_etiny = C(MIN_ETINY, 'MIN_ETINY')


OOverflow = make_lambda_friendly_class(Overflow)


Round_05up = C(ROUND_05UP, 'ROUND_05UP')


Round_ceiling = C(ROUND_CEILING, 'ROUND_CEILING')


Round_down = C(ROUND_DOWN, 'ROUND_DOWN')


Round_floor = C(ROUND_FLOOR, 'ROUND_FLOOR')


Round_half_down = C(ROUND_HALF_DOWN, 'ROUND_HALF_DOWN')


Round_half_even = C(ROUND_HALF_EVEN, 'ROUND_HALF_EVEN')


Round_half_up = C(ROUND_HALF_UP, 'ROUND_HALF_UP')


Round_up = C(ROUND_UP, 'ROUND_UP')


RRounded = make_lambda_friendly_class(Rounded)


SSubnormal = make_lambda_friendly_class(Subnormal)


UUnderflow = make_lambda_friendly_class(Underflow)


Getcontext = make_lambda_friendly_method(getcontext, 'getcontext')


Localcontext = make_lambda_friendly_method(localcontext, 'localcontext')


Setcontext = make_lambda_friendly_method(setcontext, 'setcontext')


Abs = make_lambda_friendly_method(abs, 'abs')


All = make_lambda_friendly_method(all, 'all')


Any = make_lambda_friendly_method(any, 'any')


Ascii = make_lambda_friendly_method(ascii, 'ascii')


Bin = make_lambda_friendly_method(bin, 'bin')


Bool = make_lambda_friendly_method(bool, 'bool')


Bytearray = make_lambda_friendly_method(bytearray, 'bytearray')


Bytes = make_lambda_friendly_method(bytes, 'bytes')


Callable = make_lambda_friendly_method(callable, 'callable')


Chr = make_lambda_friendly_method(chr, 'chr')


Classmethod = make_lambda_friendly_method(classmethod, 'classmethod')


Compile = make_lambda_friendly_method(compile, 'compile')


Complex = make_lambda_friendly_method(complex, 'complex')


Delattr = make_lambda_friendly_method(delattr, 'delattr')


Dict = make_lambda_friendly_method(dict, 'dict')


Dir = make_lambda_friendly_method(dir, 'dir')


Divmod = make_lambda_friendly_method(divmod, 'divmod')


Enumerate = make_lambda_friendly_method(enumerate, 'enumerate')


Eval = make_lambda_friendly_method(eval, 'eval')


Exec = make_lambda_friendly_method(exec, 'exec')


Filter = make_lambda_friendly_method(filter, 'filter')


Float = make_lambda_friendly_method(float, 'float')


Format = make_lambda_friendly_method(format, 'format')


Frozenset = make_lambda_friendly_method(frozenset, 'frozenset')


Getattr = make_lambda_friendly_method(getattr, 'getattr')


Globals = make_lambda_friendly_method(globals, 'globals')


Hasattr = make_lambda_friendly_method(hasattr, 'hasattr')


Hash = make_lambda_friendly_method(hash, 'hash')


Help = make_lambda_friendly_method(help, 'help')


Hex = make_lambda_friendly_method(hex, 'hex')


Id = make_lambda_friendly_method(id, 'id')


Input = make_lambda_friendly_method(input, 'input')


Int = make_lambda_friendly_method(int, 'int')


Isinstance = make_lambda_friendly_method(isinstance, 'isinstance')


Issubclass = make_lambda_friendly_method(issubclass, 'issubclass')


Iter = make_lambda_friendly_method(iter, 'iter')


Len = make_lambda_friendly_method(len, 'len')


List = make_lambda_friendly_method(list, 'list')


Locals = make_lambda_friendly_method(locals, 'locals')


Map = make_lambda_friendly_method(map, 'map')


Max = make_lambda_friendly_method(max, 'max')


Memoryview = make_lambda_friendly_method(memoryview, 'memoryview')


Min = make_lambda_friendly_method(min, 'min')


Next = make_lambda_friendly_method(next, 'next')


Object = make_lambda_friendly_method(object, 'object')


Oct = make_lambda_friendly_method(oct, 'oct')


Open = make_lambda_friendly_method(open, 'open')


Ord = make_lambda_friendly_method(ord, 'ord')


Pow = make_lambda_friendly_method(pow, 'pow')


Print = make_lambda_friendly_method(print, 'print')


Property = make_lambda_friendly_method(property, 'property')


Range = make_lambda_friendly_method(range, 'range')


Repr = make_lambda_friendly_method(repr, 'repr')


Reversed = make_lambda_friendly_method(reversed, 'reversed')


Round = make_lambda_friendly_method(round, 'round')


Set = make_lambda_friendly_method(set, 'set')


Setattr = make_lambda_friendly_method(setattr, 'setattr')


Slice = make_lambda_friendly_method(slice, 'slice')


Sorted = make_lambda_friendly_method(sorted, 'sorted')


Staticmethod = make_lambda_friendly_method(staticmethod, 'staticmethod')


Str = make_lambda_friendly_method(str, 'str')


Sum = make_lambda_friendly_method(sum, 'sum')


Super = make_lambda_friendly_method(super, 'super')


Tuple = make_lambda_friendly_method(tuple, 'tuple')


Type = make_lambda_friendly_method(type, 'type')


Vars = make_lambda_friendly_method(vars, 'vars')


Zip = make_lambda_friendly_method(zip, 'zip')


